class Excel
{
    static Table table;
    static char pressedKey;
    static boolean flagEnd;
    static Pointer pointer;

    function void start()
    {
        let table = Table.new(4, 5);
        let pointer = Pointer.new(4, 5);
        let flagEnd = false;
        do TableStructure.drawTable();
        do StartInstruction.draw();
        return;
    }

    function void run()
    {
        var int x, y;
        var String stringValue;
        var int intValue;
        var Cell cell;
        var char type;
        var String str;
        do CellSelector.start();
        while (~flagEnd)
        {
            let pressedKey = Keyboard.keyPressed(); //возможно стоит вынести в отдельный метод обработку клавиш
            if (pressedKey = 140)   //esc (выйти из программы)
            {
                let flagEnd = true;
            }

            if (pressedKey = 130)   //left arrow
            {
                do pointer.toLeft();
                let x = pointer.getX();
                let y = pointer.getY();
                let cell = table.getCell(x, y);
                let type = cell.getType();
                let str = cell.getString();
                do CellSelector.selectNext(x, y, type, str);
            }

             if (pressedKey = 132)   //right arrow
            {
                do pointer.toRight();
                let x = pointer.getX();
                let y = pointer.getY();
                let cell = table.getCell(x, y);
                let type = cell.getType();
                let str = cell.getString();
                do CellSelector.selectNext(x, y, type, str);
            }

             if (pressedKey = 131)   //up arrow
            {
                do pointer.toUp();
                let x = pointer.getX();
                let y = pointer.getY();
                let cell = table.getCell(x, y);
                let type = cell.getType();
                let str = cell.getString();
                do CellSelector.selectNext(x, y, type, str);
            }

             if (pressedKey = 133)   //down arrow
            {
                do pointer.toDown();
                let x = pointer.getX();
                let y = pointer.getY();
                let cell = table.getCell(x, y);
                let type = cell.getType();
                let str = cell.getString();
                do CellSelector.selectNext(x, y, type, str);
            }

            if (pressedKey = 61)    //= для записи выражений
            {
                let x = pointer.getX();
                let y = pointer.getY();
                do CellSelector.drawEmptyCell(x, y);
                do Screen.drawRectangle(163, 0, 512, 60);
                do Output.moveCursor(2, 21);
                let stringValue = Keyboard.readLine("");
                if (Parser.isCorrectExpression(stringValue) = true)
                {
                    do Output.moveCursor(3 * y + 10, x * 12 + 17);
                    let intValue = Parser.getLastValue();
                    do Output.printInt(intValue);
                    do table.writeExpression(intValue, stringValue, x, y);
                }
                
                let pressedKey = 0;
            }
            if (pressedKey = 119)   //w - write
            {
                let x = pointer.getX();
                let y = pointer.getY();
                do CellSelector.drawEmptyCell(x, y);
                do Output.moveCursor(3 * y + 10, x * 12 + 17);
                let stringValue = Keyboard.readLine("");
                if (Parser.isNumber(stringValue) = true)
                {
                    let intValue = Parser.getLastValue();
                    do table.writeIntCell(intValue, x, y);
                    do CellSelector.drawEmptyCell(x, y);
                    do Output.moveCursor(3 * y + 10, x * 12 + 17);
                    do Output.printInt(intValue);
                }
                else
                {
                    do table.writeStringCell(stringValue, x, y);
                }
                let pressedKey = 0;
            }
            do Sys.wait(100);
        }
        return;
    }

    
}
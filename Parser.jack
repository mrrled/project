class Parser //не работает, потрогай (добавить парсинг отрицательных чисел)
{
    static int num;
    static Array arr;

    function int getLastValue()
    {
        return num;
    }

    function int getLastArr()
    {
        return arr;
    }

    function int parseSimpleNumber(String str) //вдруг пригодится
    {
        var int num;
        var int i;
        let num = 0;
        let i = 0;
        while(i < str.length())
        {
            let num = (num * 10) + (str.charAt(i) - 48);
            let i = i + 1;
        }
        return num;
    }

    function boolean isNumber(String str) //если после этого вызвать getLastValue(), то это будет tryParse
    {
        var int i;
        let i = 0;
        let num = 0;
        while(i < str.length())
        {
            if(str.charAt(i) < 48 | str.charAt(i) > 57) 
            {
                return false;
            } 
            let num = (num * 10) + (str.charAt(i) - 48);
            let i = i + 1;
        }
        return true;
    }

    function boolean isCorrectExpression(String str) //если после этого вызвать getLastValue(), то это будет калькулятор
    {                                                //если вызвать getLastArr(), то это будет массив на который мы разбили строку
        var String opers, currentNum;
        var IntList list;
        var int i;
        var Calculator calc;

        let calc = Calculator.new();
        let list = IntList.new();
        let opers = "=";
        let currentNum = null;
        let i = 1;
        
        if(~(str.charAt(0) = opers.charAt(0)))
        {
            do opers.dispose();
            do calc.dispose();
            do list.dispose();
            return false;
        }
        
        do opers.dispose();
        let opers = "+-*/()";

        do list.add(opers.charAt(4));
        while(i < str.length())
        {
            if(calc.IsStringContainsChar(opers, str.charAt(i)))
            {
                if(Parser.isNumber(currentNum) & ~(currentNum = null))
                {
                    //do Output.printString("this is number to list");
                    //do Output.println();
                    do list.add(num);
                    //do Output.printInt(num);
                    //do Output.println();
                }
                else
                {
                    //do Output.printString("this is empty curr num");
                    //do Output.println();
                    if(~(currentNum = null))
                    {
                        do opers.dispose();
                        do calc.dispose();
                        do list.dispose();
                        return false;
                    }
                }
                //do Output.printString("this is +-*/");
                //do Output.println();
                do currentNum.dispose();
                let currentNum = null;
                do list.add(str.charAt(i));
                //do Output.printInt(str.charAt(i));
                //do Output.println();
            }
            else
            {
                //do Output.printString("this is char to number");
                //do Output.println();
                if(currentNum = null)
                {
                    let currentNum = String.new(10);
                }
                do currentNum.appendChar(str.charAt(i));
            }
            let i = i + 1;
        }
        if(~(currentNum = null))
        {
            //do Output.printString("this is end ");
            //do Output.printString(currentNum);
            //do Output.println();
            if(Parser.isNumber(currentNum))
            {
                do list.add(num);
            }
            else
            {
                do opers.dispose();
                do calc.dispose();
                do list.dispose();
                return false;
            }
        }
        //do Output.printString("this is list");
        //do Output.println();
        //do list.print();
        //do Output.printString("this is list to array");
        //do Output.println();
        do list.add(opers.charAt(5));
        let arr = list.toArray();
        let num = calc.calculate(arr, list.getLength());
        do calc.dispose();
        do opers.dispose();
        do list.dispose();
        return true;
    }
}